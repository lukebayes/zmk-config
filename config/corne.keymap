#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans             &kp Q               &kp W           &kp E           &kp R      &kp T        &kp Y            &kp U            &kp I                &kp O                      &kp P  &trans
&trans  &hm LEFT_SHIFT A  &hm LEFT_CONTROL S  &hm LEFT_ALT D  &hm LEFT_GUI F      &kp G        &kp H  &hm LEFT_GUI J  &hm RIGHT_ALT K  &hm RIGHT_CONTROL L  &hm RIGHT_SHIFT SEMICOLON  &trans
&trans             &kp Z               &kp X           &kp C           &kp V      &kp B        &kp N            &kp M     &kp LEFT_ALT            &kp SLASH              &kp BACKSPACE  &trans
                                                  &kp ESCAPE         &kp TAB  &kp ENTER    &kp SPACE       &kp DELETE            &to 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp ESCAPE  &kp F2         &kp F4           &kp F11     &kp F12     &kp LEFT_BRACKET        &kp N7        &kp N8        &kp N9       &kp SLASH  &trans
&trans     &hm LEFT_SHIFT TAB   &hm LEFT_CONTROL MINUS &hm LEFT_ALT PLUS  &hm LEFT_GUI EQUAL     &kp G        &kp H  &hm RIGHT_GUI NUMBER_4  &hm RIGHT_ALT NUMBER_5  &hm RIGHT_CONTROL NUMBER_6  &hm RIGHT_SHIFT APOSTROPHE  &trans
&trans      &trans  &trans  &kp LESS_THAN  &kp GREATER_THAN  &kp PERIOD         &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp PERIOD  &trans
                                    &to 0           &kp TAB   &kp ENTER            &kp SPACE    &kp DELETE         &to 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans    &kp ESCAPE    &kp C_MUTE  &kp C_VOL_DN          &kp C_VOL_UP  &kp C_PLAY_PAUSE    &kp CARET    &kp PAGE_UP  &kp KP_MULTIPLY  &kp LPAR         &kp RPAR  &trans
&trans       &kp TAB  &kp LEFT_ALT  &kp LEFT_GUI  &kp LS(LA(LEFT_ALT))       &kp LA(TAB)     &kp HOME       &kp LEFT         &kp DOWN    &kp UP  &kp RIGHT_ARROW  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                &trans            &trans      &kp END  &kp PAGE_DOWN         &kp LBRC  &kp RBRC         &kp PIPE  &trans
                                           &to 1               &kp TAB        &kp RETURN    &kp SPACE     &kp DELETE           &trans
            >;
        };
    };
};


